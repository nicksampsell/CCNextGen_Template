@using Microsoft.AspNetCore.Mvc.ViewEngines
@using Microsoft.AspNetCore.Http
@inject ICompositeViewEngine Engine
@inject IHttpContextAccessor HttpContextAccessor
@{
    var cookies = HttpContextAccessor.HttpContext.Request.Cookies.ToList();
    var collapseSidebar = cookies.Where(x => x.Key == "collapseSidebar" && x.Value == "true").Any();

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="theme-color" content="@Configuration.GetValue("TemplateConfiguration:ThemeColor","#00072d")">

    <title>@ViewData["Title"] - @(Configuration.GetSection("TemplateConfiguration")["AppFullName"] ?? "")</title>

    <link rel="icon" href="@Configuration.GetValue("TemplateConfiguration:Favicon","~/img/favicon.ico")" type="image/x-icon" />
    <link rel="shortcut icon" href="@Configuration.GetValue("TemplateConfiguration:Favicon","~/img/favicon.ico")" type="image/x-icon" />

    @if (Engine.FindView(ViewContext, "_Head", isMainPage: false).Success)
    {
        @await Html.PartialAsync("_Head")
    }
    else
    {
        <link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.min.css"/>
        <link rel="stylesheet" href="~/lib/select2/css/select2.min.css"/>
        <link rel="stylesheet" href="~/lib/select2/css/select2-bootstrap-5-theme.min.css"/>
        <link rel="stylesheet" href="~/css/CCNextGen_Template.css" asp-append-version="true" />
        <link rel="stylesheet" href="@(Configuration.GetValue<string>("TemplateConfiguration:OverrideIconFont", "https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0"))" />
        
    
        <link rel="stylesheet" href="/css/site.css" asp-append-version="true"/>
        @if(Configuration.GetValue<bool>("TemplateConfiguration:UseBaseTag", false))
        {
            <base href="@Configuration.GetValue("TemplateConfiguration:BaseHref","~/")" />
        }
        
    }
    
    @await RenderSectionAsync("HeadInject", required: false)


    @if(Configuration.GetValue<bool>("TemplateConfiguration:EnableBlazor", false))
    {
        <component type="typeof(Microsoft.AspNetCore.Components.Web.HeadOutlet)" render-mode="ServerPrerendered" />
    }

</head>
<body>
    @if (Engine.FindView(ViewContext, "_BeforeLayout", isMainPage: false).Success)
    {
        @await Html.PartialAsync("_BeforeLayout")
    }
    <div class="d-flex flex-no-wrap" id="wrapper" style="overflow-x: hidden;">
        <div class="d-flex flex-column flex-shrink-0 p-2 text-bg-dark col-2 @(collapseSidebar ? "collapse" : "")" style="z-index: 10;" id="sidebar">
            ﻿@{
                string currentArea = ViewContext.RouteData.Values["area"]?.ToString() ?? "";
            }

            @if (currentArea.ToLower() == "admin")
            {
                @if (!IsSectionDefined("CustomAdminLogo"))
                {
                    <div class="d-flex flex-row text-center align-items-center">
                        <a href="/" class="d-flex flex-row justify-content-between align-items-center text-decoration-none">
                            <img src="@(!String.IsNullOrEmpty(Configuration.GetSection("TemplateConfiguration")["Logo"]) ? Configuration.GetSection("TemplateConfiguration")["Logo"] : "/_content/CCNextGen_Template/img/cc_logo.png")" alt="@(Configuration.GetSection("TemplateConfiguration")["AppFullName"] ?? "")" class="col-4 img-fluid" />
                            <div class="d-flex flex-columns row">
                                <h1 class="h3 text-center text-white text-decoration-none flex-grow col-12">@(Configuration.GetSection("TemplateConfiguration")["AppShortName"] ?? "")</h1>
                                <h2 class="h5 text-center text-white text-decoration-none col-12">Admin Panel</h2>
                            </div>
                        </a>
                    </div>
                }
                else
                {
                    @await RenderSectionAsync("CustomAdminLogo", required: false)
                }

                <div id="adminSidebar">
                    @await RenderSectionAsync("AdminSidebar", required: false)
                    @if (Engine.FindView(ViewContext, "_AdminSidebar", isMainPage: false).Success)
                    {
                        @await Html.PartialAsync("_AdminSidebar")
                    }
                </div>
            }
            else
            {
                @if (Engine.FindView(ViewContext, "_Logo", isMainPage: false).Success)
                {
                    @await Html.PartialAsync("_Logo")
                }
                else
                {
                    if (!IsSectionDefined("CustomLogo"))
                    {
                        <div class="d-flex flex-column text-center align-items-center">
                            <a href="/" class="">
                                <img src="@(!String.IsNullOrEmpty(Configuration.GetSection("TemplateConfiguration")["Logo"]) ? Configuration.GetSection("TemplateConfiguration")["Logo"] : "/_content/CCNextGen_Template/img/cc_logo.png")" alt="@(Configuration.GetSection("TemplateConfiguration")["AppFullName"] ?? "")" class="img-fluid" />
                            </a>
                            <h1 class="h3 text-centerte text-white text-decoration-none">@(Configuration.GetSection("TemplateConfiguration")["AppShortName"] ?? "")</h1>
                        </div>
                    }
                    else
                    {
                        @await RenderSectionAsync("CustomLogo", required: false)
                    }
                }

                <div id="authSidebar">
                    @await RenderSectionAsync("Sidebar", required: false)
                    @if(Engine.FindView(ViewContext, "_Sidebar", isMainPage: false).Success)
                    {
                        @await Html.PartialAsync("_Sidebar")
                    }
                </div>
            }
        </div>
        <div class="flex-grow-1">

            @if (Engine.FindView(ViewContext, "_Topbar", isMainPage: false).Success)
            {
                <div class="topbar bg-secondary-subtle p-3 shadow-sm px-5" style="border-bottom: 1px solid rgba(0,0,0,.05)" id="topmenu">
                    <div class="d-flex flex-row justify-content-end align-items-center">
                        @await Html.PartialAsync("_Topbar")
                    </div>
                </div>
            }

            @if (ViewData["NoContainer"] != null && ViewData["NoContainer"] is bool noContainer && noContainer == true)
            {
                @RenderBody();
            }
            else if (ViewData["ContainerFluid"] != null && ViewData["ContainerFluid"] is bool fluidBody && fluidBody == true)
            {
                <div class="container-fluid">
                    <main role="main" class="pb-3 pt-3">
                        @RenderBody()
                    </main>
                </div>
            }
            else
            {
            <div class="container">
                <main role="main" class="pb-3 pt-3">
                    @RenderBody()
                </main>
            </div>
            }
        </div>
    </div>
    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="~/lib/bootstrap/js/popper.min.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>